#BlueJ class context
comment0.params=
comment0.target=Viewer()
comment0.text=\ Do\ nothing\ constructor.\ We'll\ initialize\ everything\ after\ load\n
comment1.params=
comment1.target=int\ getSamplingRate()
comment1.text=\ Return\ the\ sampling\ rate\ of\ the\ sound.\ \ Only\ works\ if\ the\ sound\ has\ been\n\ created\ (i.e.,\ the\ helper)\n
comment10.params=begin\ end
comment10.target=void\ zoomTo(int,\ int)
comment10.text=\ zoom\ to\ a\ range\n
comment11.params=
comment11.target=void\ zoomReset()
comment12.params=fileName
comment12.target=void\ writeToFile(java.lang.String)
comment12.text=\ Write\ the\ sound\ to\ a\ specific\ file\n
comment13.params=
comment13.target=void\ createMainFrame()
comment14.params=event
comment14.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment15.params=event
comment15.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment16.params=event
comment16.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment17.params=event
comment17.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment18.params=event
comment18.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment19.params=event
comment19.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment2.params=soundLength
comment2.target=java.util.ArrayList\ newSound(int)
comment2.text=\ Create\ a\ new\ empty\ sound\n
comment20.params=
comment20.target=void\ makeSoundVis()
comment21.params=
comment21.target=void\ makeOverView()
comment22.params=e
comment22.target=void\ update(javax.sound.sampled.LineEvent)
comment22.text=\n\ Method\ to\ handle\ the\ line\ event\ update\n\ @param\ e\ the\ line\ event\n
comment23.params=
comment23.target=void\ handleZoomIn()
comment23.text=\n\ Method\ to\ handle\ a\ zoom\ in\n
comment24.params=
comment24.target=void\ handleZoomOut()
comment25.params=selection\ c
comment25.target=java.util.ArrayList\ getSampleAsArrayList(Viewer.Selection,\ java.awt.Component)
comment26.params=beginFrame\ endFrame
comment26.target=java.util.ArrayList\ findMinMax(int,\ int)
comment27.params=begin\ end
comment27.target=boolean\ checkRange(int,\ int)
comment3.params=
comment3.target=java.util.ArrayList\ load()
comment3.text=\ Load\ some\ sound\ data\ from\ through\ a\ file\ chooser\n\ We\ restrict\ the\ allowed\ file\ formats\ to\ .wav,\ .au\ .aif\ .aiff.\n\ We\ only\ check\ agains\ the\ file\ name.\ The\ file\ may\ actually\ be\ encoded\n\ differently.\n
comment4.params=f
comment4.target=boolean\ accept(java.io.File)
comment5.params=
comment5.target=java.lang.String\ getDescription()
comment6.params=filename
comment6.target=java.util.ArrayList\ load(java.lang.String)
comment6.text=\ Load\ a\ sound\ given\ a\ specific\ file\ name\n
comment7.params=data
comment7.target=void\ setData(java.util.ArrayList)
comment7.text=\n\ Takes\ a\ new\ ArrayList\ to\ use\ as\ the\ data\ for\ the\ sound.\ \ \n\ Will\ keep\ the\ same\ audio\ format\ (sampling\ rate,\ depth\ (which\ should\ be\ 16\!),\ filename,\ etc).\n
comment8.params=updateData
comment8.target=void\ refresh(boolean)
comment8.text=\ This\ method\ is\ called\ to\ refresh\ the\ visualization\ and\ optionally\ update\n\ the\ byte\ array\ in\ helper\ with\ the\ current\ content\ of\ the\ integer\ arraylist.\n
comment9.params=
comment9.target=void\ play()
comment9.text=\ Play\ the\ sound\n
numComments=28
